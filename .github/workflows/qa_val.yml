name: QA Validation Job

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      space:
        type: string
        required: true
      object_type:
        type: string
        required: true
      job_type:
        type: string
        required: true
      test_type:
        type: string
        required: true
      deploy:
        type: boolean
        required: true
      skip_test:
        type: boolean
      deployment_file:
        type: string
        required: true
    secrets:
      DATABRICKS_HOST:
        required: true
      DATABRICKS_TOKEN:
        required: true
      GH_TOKEN:
        required: true

jobs:
  qa-deploy-config:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}_${{ inputs.space }}
    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -e ".[dev]"

      # ✅ Ensure ~/.local/bin exists
      - name: Create ~/.local/bin if missing
        run: |
          mkdir -p ~/.local/bin
          echo "✅ Ensured ~/.local/bin exists"

      # ✅ Install Databricks CLI using pip --user
      - name: Install Databricks CLI
        run: |
          pip uninstall -y databricks-cli || true
          pip install --user databricks
          export PATH="$HOME/.local/bin:$PATH"
          echo "✅ Installed Databricks CLI"
          echo "PATH: $PATH"
          ls $HOME/.local/bin || echo "Directory not found"
          which databricks || echo "databricks not found"
          databricks version || echo "version command failed"

      - name: Configure Databricks CLI
        run: |
          mkdir -p ~/.databricks
          echo '{"host": "'$DATABRICKS_HOST'", "token": "'$DATABRICKS_TOKEN'"}' > ~/.databricks/config
          echo "✅ Databricks CLI configured"

      - name: Build Wheel
        run: python setup.py bdist_wheel

      - name: Deploy Bundle
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          databricks bundle deploy -t dev_feature

      - name: Run Job
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          databricks bundle run -t dev_feature data_pipeline-rep-smoke-dev-feature-val-v1 \
          --parameters='{"parameters": ["data_pipeline.validation.task.rep_val", "--env", "dev", "--space", "feature", "--object_type", "re", "--job_type", "rep", "--test_type", "smoke"]}'